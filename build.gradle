group 'com.dafei1288'
//version '1.0-SNAPSHOT'
version '0.0.1-alpha'


apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenCentral()
}

dependencies {

    compile group: 'com.google.guava', name: 'guava', version: '24.0-jre'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.1'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.19'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    compile group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.20'
    compile group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.20'

    compile 'io.javalin:javalin:1.6.0'

//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.5'
//    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.5'
//    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.47'

}





//编译groovy代码时采用 UTF-8
tasks.withType(GroovyCompile) {
    groovyOptions.encoding = "MacRoman"
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
//fix 编码 GBK 的不可映射字符

//如果生成javadoc出现编码问题添加
javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "https://github.com/dafei1288/max"
        title "Max 致力于协助初级开发者简单实用lambda表达式"
    }
}

//参见Part 2， 为项目生成**.jar/**-javadoc.jar/**-sources.jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

apply plugin: 'signing'
//为所有的jar包做数字签名
signing {
//    useGpgCmd()
    sign configurations.archives
    sign javadocJar
    sign sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            //若是war包，就写components.web,若是jar包，就写components.java
            from components.java

            artifact javadocJar
            artifact sourcesJar

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'max'
                    description 'a easy way to use lambda for java user'
                    url 'https://github.com/dafei1288/max'
                    scm {
                        url 'https://github.com/dafei1288/max.git'
                        connection 'https://github.com/dafei1288/max'
                        developerConnection 'https://github.com/dafei1288/max'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'dafei1288'
                            name 'dafei1288'
                            email 'dafei1288@sina.com'
                        }
                    }
                }

                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            // create the signed artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    //alpha.pom
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }

    }
    repositories {
        maven {

            if (project.version.endsWith('-SNAPSHOT')) {
                url = "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }

            credentials {
                username 'dafei1288'
                password 'maliwen1288'
            }
        }
    }
}